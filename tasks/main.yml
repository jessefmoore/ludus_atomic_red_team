---
- name: Gather facts if needed
  ansible.builtin.setup:
  when: ansible_os_family is not defined

- name: Check for Windows
  ansible.builtin.fail:
    msg: Atomic Red Team only supports Windows
  when: ansible_os_family != "Windows"

- name: Get Windows version
  ansible.windows.win_shell: |
    $os = Get-CimInstance -ClassName Win32_OperatingSystem
    $version = [System.Version]$os.Version
    $versionString = "$($version.Major).$($version.Minor)"
    Write-Output $versionString
  register: win_version_output

- name: Ensure host is >= Windows 10
  ansible.builtin.assert:
    that: (win_version_output.stdout | trim) is version_compare('10', '>')
    fail_msg: "Host is not running Windows 10 or newer"
    success_msg: "Host is running Windows {{ win_version_output.stdout | trim }}"

- name: Get PowerShell version
  ansible.windows.win_shell: $PSVersionTable.PSVersion.Major
  register: ps_version_output

- name: Ensure Powershell is >= 5
  ansible.builtin.assert:
    that: (ps_version_output.stdout | trim) is version_compare('5', '>=')
    fail_msg: "Host is not running Powershell 5 or newer"
    success_msg: "Host is running Powershell {{ ps_version_output.stdout | trim }}"

- name: Verify internet connectivity
  ansible.windows.win_wait_for:
    host: boxstarter.org
    port: 443
    state: started
    delay: 0
    timeout: 2

- name: Disable Defender 1
  ansible.windows.win_powershell:
    script: |
      Add-MpPreference -ExclusionPath 'C:\'

- name: Execute PowerShell script to check tamper protection status
  ansible.windows.win_shell: |
    (Get-MpComputerStatus).IsTamperProtected
  register: tamper_protection_result

- name: Set fact based on tamper protection status
  ansible.builtin.set_fact:
    tamper_protection_enabled: "{{ true if 'True' in tamper_protection_result.stdout else false }}"

- name: Disable Defender 2
  ansible.builtin.script:
    cmd: disable_defender.bat
  register: disable_defender
  when: tamper_protection_enabled

- name: Reboot after disabling Defender
  ansible.windows.win_reboot:
  when: tamper_protection_enabled

- name: Install Atomic Red Team and Atomic Tests
  ansible.windows.win_powershell:
    script: |
      powershell -nop -exec bypass -c "IEX (New-Object Net.WebClient).DownloadString('https://gist.githubusercontent.com/jessefmoore/800284d3f5cf8b168b88c774994d3ccd/raw/90d6ee0b4dd4f208227335d11e3f937b57757f31/InstallArt.ps1')"

- name: Setup Powershell Profiles
  community.windows.win_lineinfile:
    path: C:\Users\localuser\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1
    line: Import-Module "C:\AtomicRedTeam\invoke-atomicredteam\Invoke-AtomicRedTeam.psd1" -Force
    create: true

- name: Success
  ansible.builtin.debug:
    msg: "Atomic Red Team install has finished."
